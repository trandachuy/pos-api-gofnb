using System;
using GoFoodBeverage.Domain.Base;
using System.Collections.Generic;
using GoFoodBeverage.Domain.Enums;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace GoFoodBeverage.Domain.Entities
{
    [Table(nameof(Order))]
    public class Order : BaseEntity
    {
        public Guid? StoreId { get; set; }

        public Guid? BranchId { get; set; }

        public Guid? ShiftId { get; set; }

        public Guid? CustomerId { get; set; }

        public Guid? PromotionId { get; set; }

        public Guid? AreaTableId { get; set; }

        public Guid? OrderDeliveryId { get; set; }

        public Guid? DeliveryMethodId { get; set; }

        [MaxLength(255)]
        public string Note { get; set; }
        /// <summary>
        /// Order status
        /// </summary>
        public EnumOrderStatus StatusId { get; set; }

        /// <summary>
        /// Order payment status
        /// </summary>
        public EnumOrderPaymentStatus? OrderPaymentStatusId { get; set; }

        public EnumOrderType OrderTypeId { get; set; }

        public EnumPaymentMethod PaymentMethodId { get; set; }

        [Column(TypeName = "varchar")]
        [MaxLength(50)]
        public string Code { get; set; }

        public string StringCode
        {
            get
            {
                return $"{OrderTypeId.GetFirstCharacter()}{Code}";
            }
        }

        /// <summary>
        /// Sum all original price of product items, toppings, fees
        /// </summary>
        public decimal OriginalPrice { get; set; }

        /// <summary>
        /// Sum total discount of all product items in order, promotion
        /// </summary>
        public decimal TotalDiscountAmount { get; set; }

        public decimal PriceAfterDiscount { get { return OriginalPrice - TotalDiscountAmount; } }

        public decimal TotalFee { get; set; }

        public bool IsPromotionDiscountPercentage { get; set; }

        /// <summary>
        /// Total discount value of promotion
        /// </summary>
        public decimal PromotionDiscountValue { get; set; }

        /// <summary>
        /// The promotion name apply for this order
        /// </summary>
        public string PromotionName { get; set; }

        /// <summary>
        /// Customer discount value from member shift
        /// </summary>
        public decimal CustomerDiscountAmount { get; set; }

        [MaxLength(50)]
        public string CustomerMemberShipLevel { get; set; }

        /// <summary>
        /// Sum total cost of all product items in an order
        /// </summary>
        public decimal TotalCost { get; set; }

        public string CashierName { get; set; }

        public Guid? PlatformId { get; set; }
        /// <summary>
        /// This field stored all related data to this order
        /// </summary>
        public string RestoreData { get; set; }

        public decimal DeliveryFee { get; set; }

        public decimal TotalTax { get; set; }

        /// <summary>
        /// Money given by customer
        /// </summary>
        public decimal ReceivedAmount { get; set; }

        public decimal Change { get; set; }

        /// <summary>
        /// OrderId generated by Ahamove third party, Example: "1YQJVY"
        /// </summary>
        [MaxLength(50)]
        public string AhamoveOrderId { get; set; }

        public virtual Shift Shift { get; set; }

        public virtual Customer Customer { get; set; }

        public virtual AreaTable AreaTable { get; set; }

        public virtual ICollection<OrderItem> OrderItems { get; set; }

        public virtual ICollection<OrderFee> OrderFees { get; set; }

        public virtual ICollection<OrderSession> OrderSessions { get; set; }

        public virtual ICollection<OrderHistory> OrderHistories { get; set; }

        public virtual Platform Platform { get; set; }

        public virtual Store Store { get; set; }

        public virtual OrderDelivery OrderDelivery { get; set; }

        public virtual DeliveryMethod DeliveryMethod { get; set; }

        public virtual ICollection<PointHistory> PointHistories { get; set; }
    }
}
